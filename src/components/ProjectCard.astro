---
export interface Props {
  project: {
    id: string;
    title: string;
    author: string;
    author_img: string;
    category: string;
    description: string;
    images: string[];
    tags: string[];
    status: string;
    features: string[];
    plan: string;
  };
}

const { project } = Astro.props;

const statusColors: Record<string, string> = {
  completed: "bg-green-100 text-green-800 border-green-200",
  in_progress: "bg-yellow-100 text-yellow-800 border-yellow-200",
  pending: "bg-gray-100 text-gray-800 border-gray-200",
};

const categoryColors: Record<string, string> = {
  Casino: "bg-purple-100 text-purple-800 border-purple-200",
  Tipsters: "bg-blue-100 text-blue-800 border-blue-200",
  News: "bg-orange-100 text-orange-800 border-orange-200",
};

const statusText: Record<string, string> = {
  completed: "Completado",
  in_progress: "En Desarrollo",
  pending: "Pendiente",
};
---

<div
  class="relative w-full h-full rounded-xl shadow-md hover:shadow-xl dark:hover:shadow-2xl transition-all duration-300 overflow-hidden group border border-gray-100 dark:border-gray-700 cursor-pointer"
  style="aspect-ratio: 16/9;"
  data-project-card
  data-project-id={project.id}
  style={`background-image: url('${project.images[0]}'); background-size: cover; background-position: center;`}
>
  <!-- Background Image Overlay -->
  <div
    class="absolute inset-0 bg-gradient-to-r from-black/50 via-black/30 to-black/10 group-hover:from-black/60 group-hover:via-black/40 group-hover:to-black/20 transition-all duration-300"
  >
  </div>

  <!-- Background Image Scale Effect -->
  <div
    class="absolute inset-0 bg-cover bg-center group-hover:scale-105 transition-transform duration-300"
    style={`background-image: url('${project.images[0]}');`}
  >
  </div>

  <!-- Overlay for better text readability -->
  <div
    class="absolute inset-0 bg-gradient-to-r from-black/70 via-black/50 to-black/30 group-hover:from-black/60 group-hover:via-black/10 group-hover:to-black/20 transition-all duration-300"
  >
  </div>

  <!-- Category Badge -->
  <div class="absolute top-3 left-3 z-10">
    <span
      class={`px-3 py-1 rounded-full text-xs font-semibold border backdrop-blur-sm ${categoryColors[project.category] || "bg-gray-100/90 text-gray-800 border-gray-200"}`}
    >
      {project.category}
    </span>
  </div>

  <!-- PRO Badge -->
  <div class="absolute top-3 right-3 z-10">
    <div
      class={`${project.plan !== "free" ? "from-purple-500/30 to-blue-500/30" : "from-green-500/30 to-green-500/30"} flex items-center px-3 py-2 bg-gradient-to-r backdrop-blur-sm rounded-full border border-white/20 shadow-lg `}
    >
      <div class="ml-auto">
        <div class="flex items-center">
          {
            project.plan !== "free" && (
              <svg
                class="w-4 h-4 text-yellow-300 mr-1"
                fill="currentColor"
                viewBox="0 0 24 24"
              >
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
              </svg>
            )
          }
          <span
            class={`text-xs font-bold ${project.plan !== "free" ? "text-yellow-300" : "text-green-300"}`}
            >{project.plan.toUpperCase()}</span
          >
        </div>
      </div>
    </div>
  </div>

  <!-- Content -->
  <div class="relative z-10 p-6 h-full flex flex-col justify-end text-white">
    <!-- Title -->
    <h3
      class="text-2xl font-bold text-white mb-3 group-hover:text-purple-300 transition-colors line-clamp-2 drop-shadow-lg"
    >
      {project.title}
    </h3>

    <!-- Tags -->
    <div class="mb-4">
      <div class="flex flex-wrap gap-2">
        {
          project.tags
            .slice(0, 3)
            .map((tag) => (
              <span class="px-2 py-1 bg-white/20 backdrop-blur-sm text-white rounded-md text-xs font-medium border border-white/30 hover:bg-white/30 transition-colors">
                #{tag}
              </span>
            ))
        }
      </div>
    </div>

    <!-- Author & Footer Section -->
    <div class="flex items-center justify-between">
      <!-- Author Signature -->
      <div class="flex backdrop-blur-sm py-2 pr-4 rounded-full">
        <img
          class="w-6 h-6 rounded-full mr-2"
          src={project.author_img || "https://avatar.iran.liara.run/public/20"}
          alt={project.author}
        />
        <span class="text-slate-300 font-semibold text-sm tracking-wide">
          {project.author}
        </span>
      </div>

      <!-- Footer Info -->
      <div class="flex items-center text-sm text-white/70">
        <svg
          class="w-4 h-4 mr-1"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
          ></path>
        </svg>
        <span class="text-xs">{project.images.length} img</span>
      </div>
    </div>
  </div>
</div>

<script>
  function initializeProjectCard() {
    const projectCards = document.querySelectorAll("[data-project-card]");

    projectCards.forEach((card) => {
      card.addEventListener("click", () => {
        const projectId = card.getAttribute("data-project-id");
        const modal = document.getElementById(`modal-${projectId}`);
        const modalContent = modal?.querySelector("[data-modal-content]");

        if (modal && modalContent) {
          modal.classList.remove("hidden");
          setTimeout(() => {
            modal.classList.remove("opacity-0");
            modalContent.classList.remove("scale-95");
          }, 10);
        }
      });
    });
  }

  // Initialize on page load
  document.addEventListener("DOMContentLoaded", initializeProjectCard);

  // Re-initialize on navigation (for SPA behavior)
  document.addEventListener("astro:page-load", initializeProjectCard);
</script>
